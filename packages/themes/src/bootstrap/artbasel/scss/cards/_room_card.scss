@mixin round-corners {
  border-radius: $spacing-1;
  overflow: hidden;
}

@mixin image-blur {
  filter: blur(3px);
}

/* storybook card max-width */
:root .sb-show-main .room-card {
  max-width: 375px;
}

.card.room-card {
  position: relative;
  display: inline-flex;
  border: none;
  width: 100%;

  a + img:hover {
    cursor: pointer;
  }

  &.theme {
    @include round-corners;

    &-light {
      .text-frame {
        h4 {
          color: $color-mch-black;
        }

        p,
        span {
          color: $color-mch-gray-400;
        }
      }
    }

    &-dark {
      background: $color-mch-black;

      .text-frame {
        h4 {
          color: $color-mch-white;
        }

        p,
        span {
          color: $color-mch-gray-200;
        }
      }
    }
  }

  @media (hover: hover) {
    &.default-state {
      &:hover {
        .overlay-fill.dark {
          opacity: 1;
        }

        .text-frame-top p,
        .bottom-frame-left .text-medium {
          color: $color-mch-black;
        }

        .btn-icon {
          cursor: pointer;
          opacity: 1;
        }
      }

      &.theme {
        &-dark:hover .text-frame-top p,
        &-dark:hover .bottom-frame-left .text-medium {
          color: $color-mch-white;
        }

        &-light:hover .text-frame-top p {
          color: $color-mch-black;
        }
      }
    }
  }

  &.opening-state {
    @media (hover: hover) {
      &:hover {
        .overlay-fill.dark {
          opacity: 1;
        }

        .btn-icon {
          cursor: pointer;
          opacity: 1;
        }
      }
    }

    .overlay-blur.dark {
      opacity: 1;
    }

    .image-frame img {
      @include image-blur;
    }
  }

  &.unavailable-state {
    a {
      pointer-events: none;
    }

    .overlay-blur.light {
      opacity: 1;
    }

    .image-frame img {
      @include image-blur;
    }
  }

  &.select-state {
    &:hover {
      cursor: pointer;
    }

    .text-frame {
      pointer-events: none;
      transition: all 0.35s ease-out;
    }

    .form-check-input,
    .checkbox-select {
      pointer-events: all;
    }

    .overlay-fill.dark {
      opacity: 1;
    }

    &:not(.selected-state) {
      .tag,
      .overlay-eye {
        opacity: 0.75;
      }
      .text-frame {
        opacity: 0.5;
      }
    }
  }

  .image-frame {
    display: flex;
    position: relative;
    overflow: hidden;
    @include round-corners;
    justify-content: center;

    a {
      width: 100%;
      @include round-corners;
      display: flex;
      justify-content: center;
    }

    img {
      max-width: 100%;
      max-height: 100%;
      object-fit: contain;
      @include round-corners;
    }

    .tag-container {
      position: absolute;
      top: $spacing-5;
      left: $spacing-5;
      display: flex;
      z-index: 4;

      .tag {
        margin-right: $spacing-3;
        transition: all 0.35s ease-out;

        &:last-child {
          margin-right: 0;
        }
      }
    }

    .tag-curator {
      z-index: 4;
      transition: all 0.35s ease-out;
      position: absolute;
      bottom: $spacing-5;
      left: $spacing-5;
    }

    .form-check-input {
      position: absolute;
      z-index: 4;
      top: $spacing-5;
      right: $spacing-5;
      cursor: pointer;
    }

    .btn-icon {
      transition: opacity 0.35s ease-out;
      opacity: 0;
      position: absolute;
      top: $spacing-5;
      right: $spacing-5;
      z-index: 5;
    }
  }

  .text-frame {
    padding-top: $spacing-7;
    padding-left: 0;
    padding-right: 0;

    .truncate {
      text-overflow: ellipsis;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    p {
      transition: color 0.35s ease-out;
    }

    h4 {
      margin-bottom: $spacing-2;
    }
  }

  .bottom-frame {
    min-height: $spacing-7;
    // for stacked sector tags in multiple lines
    align-items: baseline;
    align-content: baseline;

    &-left {
      .tag:not(:last-child) {
        margin: 0 $spacing-3 $spacing-3 0;
      }

      .text-medium {
        text-decoration: none;
        cursor: default;
      }

      a > .text-medium {
        cursor: pointer;
      }
    }

    &-right {
      & > svg {
        position: relative;
        top: $spacing-2;
      }
      p {
        white-space: nowrap;
      }
    }
  }

  .overlay {
    &-eye {
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      transition: all 0.35s ease-out;
      width: $spacing-10;
      height: $spacing-10;
      z-index: 5;
      background: #ffffff;
      border-radius: $spacing-7;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    &-fill {
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      width: 100%;
      height: 100%;
      opacity: 0;
      transition: opacity 0.35s ease-out;
      z-index: 2;
      @include round-corners;

      &.dark {
        background: rgba(29, 35, 39, 0.3);
        &.selected {
          opacity: 1;
        }
      }
    }

    &-blur {
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      width: 100%;
      height: 100%;
      opacity: 0;
      transition: all 0.35s ease-out;
      z-index: 1;
      @include round-corners;

      &.light {
        background: rgba(255, 255, 255, 0.8);
      }

      &.dark {
        background: rgba(255, 255, 255, 0.1);
      }
    }
  }
}
